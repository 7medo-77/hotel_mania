// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  username     String        @unique
  password     String
  firstName    String
  lastName     String?
  reservations Reservation[]
  reviews      Review[]
  isAdmin      Boolean       @default(false)
  transactions Transaction[]
}

model Governate {
  id     String @id @default(uuid())
  name   String @unique
  cities City[]
}

model City {
  id          String    @id @default(uuid())
  name        String    @unique
  hotels      Hotel[]
  governate   Governate @relation(fields: [governateID], references: [id])
  governateID String
}

model Hotel {
  id           String        @id @default(uuid())
  name         String        @unique
  // amenities Amenity[]
  cityID       String
  city         City          @relation(fields: [cityID], references: [id])
  reviews      Review[]
  rooms        Room[]
  Transactions Transaction[]
  Reservations Reservation[]
}

model Room {
  id           String        @id @default(uuid())
  number       Int
  amenities    Amenity[]
  hotelID      String
  hotel        Hotel         @relation(fields: [hotelID], references: [id])
  isReserved   Boolean       @default(false)
  Reservations Reservation[]
}

model Review {
  text       String
  reviewDate DateTime
  userID     String
  user       User     @relation(fields: [userID], references: [id])
  hotelID    String
  hotel      Hotel    @relation(fields: [hotelID], references: [id])

  @@id([userID, hotelID])
}

model Amenity {
  id    String @id @default(uuid())
  name  String @unique
  rooms Room[]
}

model Transaction {
  id             String       @id @default(uuid())
  amount         Float
  trasactionDate DateTime
  paymentMethod  Method       @default(CASH)
  userID         String
  user           User         @relation(fields: [userID], references: [id])
  hotelID        String
  hotel          Hotel        @relation(fields: [hotelID], references: [id])
  Reservation    Reservation?
}

enum Method {
  CASH
  CREDIT
}

model Reservation {
  id            String      @id @default(uuid())
  userID        String
  user          User        @relation(fields: [userID], references: [id])
  roomID        String
  room          Room        @relation(fields: [roomID], references: [id])
  hotelID       String
  hotel         Hotel       @relation(fields: [hotelID], references: [id])
  transactionID String      @unique
  transaction   Transaction @relation(fields: [transactionID], references: [id])
}
